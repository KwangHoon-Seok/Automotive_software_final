[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:[m[K In constructor â€˜[01m[KTrajectoryNode::TrajectoryNode(const string&, const double&, const rclcpp::NodeOptions&)[m[Kâ€™:
[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:3:76:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kloop_rate[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter-Wunused-parameter]8;;[m[K]
    3 | TrajectoryNode(const std::string &node_name, [01;35m[Kconst double &loop_rate[m[K, const rclcpp::NodeOptions & options)
      |                                              [01;35m[K~~~~~~~~~~~~~~^~~~~~~~~[m[K

[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:[m[K In lambda function:
[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:134:57:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Ks[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter-Wunused-parameter]8;;[m[K]
  134 |     double theta = SimpsonIntegration(0, sf, [&]([01;35m[Kdouble s[m[K) {return kappa;});
      |                                                  [01;35m[K~~~~~~~^[m[K
[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:[m[K In lambda function:
[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:135:53:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Ks[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter-Wunused-parameter]8;;[m[K]
  135 |     double x = SimpsonIntegration(0, sf, [&]([01;35m[Kdouble s[m[K) {return cos(theta);});
      |                                              [01;35m[K~~~~~~~^[m[K
[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:[m[K In lambda function:
[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:136:53:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Ks[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter-Wunused-parameter]8;;[m[K]
  136 |     double y = SimpsonIntegration(0, sf, [&]([01;35m[Kdouble s[m[K) {return sin(theta);});
      |                                              [01;35m[K~~~~~~~^[m[K
[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:[m[K In member function â€˜[01m[KState TrajectoryNode::ComputeEndpoint(const std::vector<double, std::allocator<double> >&, const State&)[m[Kâ€™:
[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:131:82:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kstart[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter-Wunused-parameter]8;;[m[K]
  131 | e::ComputeEndpoint(const std::vector<double> &p, [01;35m[Kconst State &start[m[K) {
      |                                                  [01;35m[K~~~~~~~~~~~~~^~~~~[m[K

[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:[m[K In member function â€˜[01m[KEigen::MatrixXd TrajectoryNode::ComputeJacobian(const std::vector<double, std::allocator<double> >&, const State&, const State&)[m[Kâ€™:
[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:141:92:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kstart[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter-Wunused-parameter]8;;[m[K]
  141 | ComputeJacobian(const std::vector<double> &p, [01;35m[Kconst State &start[m[K, const State &end) {
      |                                               [01;35m[K~~~~~~~~~~~~~^~~~~[m[K

[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:141:112:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kend[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter-Wunused-parameter]8;;[m[K]
  141 | (const std::vector<double> &p, const State &start, [01;35m[Kconst State &end[m[K) {
      |                                                    [01;35m[K~~~~~~~~~~~~~^~~[m[K

[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:[m[K In member function â€˜[01m[Kdouble TrajectoryNode::PartialKappa(double, const std::vector<double, std::allocator<double> >&, int)[m[Kâ€™:
[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:181:74:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kp[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter-Wunused-parameter]8;;[m[K]
  181 | oryNode::PartialKappa(double s, [01;35m[Kconst std::vector<double> &p[m[K, int i) {
      |                                 [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~^[m[K

