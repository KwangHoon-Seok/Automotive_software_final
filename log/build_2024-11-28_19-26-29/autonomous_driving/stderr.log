[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:[m[K In constructor â€˜[01m[KTrajectoryNode::TrajectoryNode(const string&, const double&, const rclcpp::NodeOptions&)[m[Kâ€™:
[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:3:76:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kloop_rate[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter-Wunused-parameter]8;;[m[K]
    3 | TrajectoryNode::TrajectoryNode(const std::string &node_name, [01;35m[Kconst double &loop_rate[m[K, const rclcpp::NodeOptions & options)
      |                                                              [01;35m[K~~~~~~~~~~~~~~^~~~~~~~~[m[K
[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:[m[K In member function â€˜[01m[Kvoid TrajectoryNode::Run()[m[Kâ€™:
[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:25:5:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KGenerateReferencePath[m[Kâ€™ was not declared in this scope
   25 |     [01;31m[KGenerateReferencePath[m[K(i_driving_way_);
      |     [01;31m[K^~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:[m[K At global scope:
[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:116:8:[m[K [01;31m[Kerror: [m[Kno declaration matches â€˜[01m[Kdouble TrajectoryNode::SimpsonIntegration(double, double, const std::function<double(double)>&, int)[m[Kâ€™
  116 | double [01;31m[KTrajectoryNode[m[K::SimpsonIntegration(double a, double b, const std::function<double(double)> &f, int n) {
      |        [01;31m[K^~~~~~~~~~~~~~[m[K
In file included from [01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:1[m[K:
[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/include/trajectory_planner_node.hpp:74:16:[m[K [01;36m[Knote: [m[Kcandidate is: â€˜[01m[Kdouble TrajectoryNode::SimpsonIntegration(double, double, std::function<double(double)>&, int)[m[Kâ€™
   74 |         double [01;36m[KSimpsonIntegration[m[K(double a, double b, std::function<double(double)> &f, int n = 1000);
      |                [01;36m[K^~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:1[m[K:
[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/include/trajectory_planner_node.hpp:53:7:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Kclass TrajectoryNode[m[Kâ€™ defined here
   53 | class [01;36m[KTrajectoryNode[m[K : public rclcpp::Node
      |       [01;36m[K^~~~~~~~~~~~~~[m[K
[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:[m[K In lambda function:
[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:134:57:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Ks[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter-Wunused-parameter]8;;[m[K]
  134 |     double theta = SimpsonIntegration(0, sf, [&]([01;35m[Kdouble s[m[K) {return kappa;});
      |                                                  [01;35m[K~~~~~~~^[m[K
[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:[m[K In member function â€˜[01m[KState TrajectoryNode::ComputeEndpoint(const std::vector<double, std::allocator<double> >&, const State&)[m[Kâ€™:
[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:134:38:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[KTrajectoryNode::ComputeEndpoint(const std::vector<double, std::allocator<double> >&, const State&)::<lambda(double)>[m[Kâ€™ to â€˜[01m[Kstd::function<double(double)>&[m[Kâ€™
  134 |     double theta = [01;31m[KSimpsonIntegration(0, sf, [&](double s) {return kappa;})[m[K;
      |                    [01;31m[K~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:1[m[K:
[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/include/trajectory_planner_node.hpp:74:86:[m[K [01;36m[Knote: [m[K  initializing argument 3 of â€˜[01m[Kdouble TrajectoryNode::SimpsonIntegration(double, double, std::function<double(double)>&, int)[m[Kâ€™
   74 |         double SimpsonIntegration(double a, double b, [01;36m[Kstd::function<double(double)> &f[m[K, int n = 1000);
      |                                                       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^[m[K
[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:[m[K In lambda function:
[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:135:53:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Ks[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter-Wunused-parameter]8;;[m[K]
  135 |     double x = SimpsonIntegration(0, sf, [&]([01;35m[Kdouble s[m[K) {return cos(theta);});
      |                                              [01;35m[K~~~~~~~^[m[K
[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:[m[K In member function â€˜[01m[KState TrajectoryNode::ComputeEndpoint(const std::vector<double, std::allocator<double> >&, const State&)[m[Kâ€™:
[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:135:34:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[KTrajectoryNode::ComputeEndpoint(const std::vector<double, std::allocator<double> >&, const State&)::<lambda(double)>[m[Kâ€™ to â€˜[01m[Kstd::function<double(double)>&[m[Kâ€™
  135 |     double x = [01;31m[KSimpsonIntegration(0, sf, [&](double s) {return cos(theta);})[m[K;
      |                [01;31m[K~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:1[m[K:
[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/include/trajectory_planner_node.hpp:74:86:[m[K [01;36m[Knote: [m[K  initializing argument 3 of â€˜[01m[Kdouble TrajectoryNode::SimpsonIntegration(double, double, std::function<double(double)>&, int)[m[Kâ€™
   74 |         double SimpsonIntegration(double a, double b, [01;36m[Kstd::function<double(double)> &f[m[K, int n = 1000);
      |                                                       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^[m[K
[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:[m[K In lambda function:
[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:136:53:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Ks[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter-Wunused-parameter]8;;[m[K]
  136 |     double y = SimpsonIntegration(0, sf, [&]([01;35m[Kdouble s[m[K) {return sin(theta);});
      |                                              [01;35m[K~~~~~~~^[m[K
[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:[m[K In member function â€˜[01m[KState TrajectoryNode::ComputeEndpoint(const std::vector<double, std::allocator<double> >&, const State&)[m[Kâ€™:
[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:136:34:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[KTrajectoryNode::ComputeEndpoint(const std::vector<double, std::allocator<double> >&, const State&)::<lambda(double)>[m[Kâ€™ to â€˜[01m[Kstd::function<double(double)>&[m[Kâ€™
  136 |     double y = [01;31m[KSimpsonIntegration(0, sf, [&](double s) {return sin(theta);})[m[K;
      |                [01;31m[K~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:1[m[K:
[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/include/trajectory_planner_node.hpp:74:86:[m[K [01;36m[Knote: [m[K  initializing argument 3 of â€˜[01m[Kdouble TrajectoryNode::SimpsonIntegration(double, double, std::function<double(double)>&, int)[m[Kâ€™
   74 |         double SimpsonIntegration(double a, double b, [01;36m[Kstd::function<double(double)> &f[m[K, int n = 1000);
      |                                                       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^[m[K
[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:131:82:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kstart[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter-Wunused-parameter]8;;[m[K]
  131 | State TrajectoryNode::ComputeEndpoint(const std::vector<double> &p, [01;35m[Kconst State &start[m[K) {
      |                                                                     [01;35m[K~~~~~~~~~~~~~^~~~~[m[K
[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:[m[K In lambda function:
[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:155:46:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[KTrajectoryNode::ComputeJacobian(const std::vector<double, std::allocator<double> >&, const State&, const State&)::<lambda(double)>::<lambda(double)>[m[Kâ€™ to â€˜[01m[Kstd::function<double(double)>&[m[Kâ€™
  155 |             double theta = [01;31m[KSimpsonIntegration(0, s, [&](double s) {[m[K
      |                            [01;31m[K~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~[m[K
  156 | [01;31m[K                return a + b * s + c * s * s + d * s * s * s;[m[K
      |                 [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
  157 | [01;31m[K            })[m[K;
      |             [01;31m[K~~[m[K                                
In file included from [01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:1[m[K:
[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/include/trajectory_planner_node.hpp:74:86:[m[K [01;36m[Knote: [m[K  initializing argument 3 of â€˜[01m[Kdouble TrajectoryNode::SimpsonIntegration(double, double, std::function<double(double)>&, int)[m[Kâ€™
   74 |         double SimpsonIntegration(double a, double b, [01;36m[Kstd::function<double(double)> &f[m[K, int n = 1000);
      |                                                       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^[m[K
[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:[m[K In member function â€˜[01m[KEigen::MatrixXd TrajectoryNode::ComputeJacobian(const std::vector<double, std::allocator<double> >&, const State&, const State&)[m[Kâ€™:
[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:154:37:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[KTrajectoryNode::ComputeJacobian(const std::vector<double, std::allocator<double> >&, const State&, const State&)::<lambda(double)>[m[Kâ€™ to â€˜[01m[Kstd::function<double(double)>&[m[Kâ€™
  154 |         J(0, i) = [01;31m[KSimpsonIntegration(0, sf, [&](double s) {[m[K
      |                   [01;31m[K~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~[m[K
  155 | [01;31m[K            double theta = SimpsonIntegration(0, s, [&](double s) {[m[K
      |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
  156 | [01;31m[K                return a + b * s + c * s * s + d * s * s * s;[m[K
      |                 [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
  157 | [01;31m[K            });[m[K
      |             [01;31m[K~~~[m[K                      
  158 | [01;31m[K            return -std::sin(theta) * PartialTheta(s, p, i);[m[K
      |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
  159 | [01;31m[K        })[m[K;
      |         [01;31m[K~~[m[K                           
In file included from [01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:1[m[K:
[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/include/trajectory_planner_node.hpp:74:86:[m[K [01;36m[Knote: [m[K  initializing argument 3 of â€˜[01m[Kdouble TrajectoryNode::SimpsonIntegration(double, double, std::function<double(double)>&, int)[m[Kâ€™
   74 |         double SimpsonIntegration(double a, double b, [01;36m[Kstd::function<double(double)> &f[m[K, int n = 1000);
      |                                                       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^[m[K
[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:[m[K In lambda function:
[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:162:46:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[KTrajectoryNode::ComputeJacobian(const std::vector<double, std::allocator<double> >&, const State&, const State&)::<lambda(double)>::<lambda(double)>[m[Kâ€™ to â€˜[01m[Kstd::function<double(double)>&[m[Kâ€™
  162 |             double theta = [01;31m[KSimpsonIntegration(0, s, [&](double s) {[m[K
      |                            [01;31m[K~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~[m[K
  163 | [01;31m[K                return a + b * s + c * s * s + d * s * s * s;[m[K
      |                 [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
  164 | [01;31m[K            })[m[K;
      |             [01;31m[K~~[m[K                                
In file included from [01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:1[m[K:
[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/include/trajectory_planner_node.hpp:74:86:[m[K [01;36m[Knote: [m[K  initializing argument 3 of â€˜[01m[Kdouble TrajectoryNode::SimpsonIntegration(double, double, std::function<double(double)>&, int)[m[Kâ€™
   74 |         double SimpsonIntegration(double a, double b, [01;36m[Kstd::function<double(double)> &f[m[K, int n = 1000);
      |                                                       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^[m[K
[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:[m[K In member function â€˜[01m[KEigen::MatrixXd TrajectoryNode::ComputeJacobian(const std::vector<double, std::allocator<double> >&, const State&, const State&)[m[Kâ€™:
[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:161:37:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[KTrajectoryNode::ComputeJacobian(const std::vector<double, std::allocator<double> >&, const State&, const State&)::<lambda(double)>[m[Kâ€™ to â€˜[01m[Kstd::function<double(double)>&[m[Kâ€™
  161 |         J(1, i) = [01;31m[KSimpsonIntegration(0, sf, [&](double s) {[m[K
      |                   [01;31m[K~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~[m[K
  162 | [01;31m[K            double theta = SimpsonIntegration(0, s, [&](double s) {[m[K
      |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
  163 | [01;31m[K                return a + b * s + c * s * s + d * s * s * s;[m[K
      |                 [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
  164 | [01;31m[K            });[m[K
      |             [01;31m[K~~~[m[K                      
  165 | [01;31m[K            return std::cos(theta) * PartialTheta(s, p, i);[m[K
      |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
  166 | [01;31m[K        })[m[K;
      |         [01;31m[K~~[m[K                           
In file included from [01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:1[m[K:
[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/include/trajectory_planner_node.hpp:74:86:[m[K [01;36m[Knote: [m[K  initializing argument 3 of â€˜[01m[Kdouble TrajectoryNode::SimpsonIntegration(double, double, std::function<double(double)>&, int)[m[Kâ€™
   74 |         double SimpsonIntegration(double a, double b, [01;36m[Kstd::function<double(double)> &f[m[K, int n = 1000);
      |                                                       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^[m[K
[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:169:37:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[KTrajectoryNode::ComputeJacobian(const std::vector<double, std::allocator<double> >&, const State&, const State&)::<lambda(double)>[m[Kâ€™ to â€˜[01m[Kstd::function<double(double)>&[m[Kâ€™
  169 |         J(2, i) = [01;31m[KSimpsonIntegration(0, sf, [&](double s) {[m[K
      |                   [01;31m[K~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~[m[K
  170 | [01;31m[K            return PartialKappa(s, p, i);[m[K
      |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
  171 | [01;31m[K        })[m[K;
      |         [01;31m[K~~[m[K                           
In file included from [01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:1[m[K:
[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/include/trajectory_planner_node.hpp:74:86:[m[K [01;36m[Knote: [m[K  initializing argument 3 of â€˜[01m[Kdouble TrajectoryNode::SimpsonIntegration(double, double, std::function<double(double)>&, int)[m[Kâ€™
   74 |         double SimpsonIntegration(double a, double b, [01;36m[Kstd::function<double(double)> &f[m[K, int n = 1000);
      |                                                       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^[m[K
[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:141:92:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kstart[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter-Wunused-parameter]8;;[m[K]
  141 | Eigen::MatrixXd TrajectoryNode::ComputeJacobian(const std::vector<double> &p, [01;35m[Kconst State &start[m[K, const State &end) {
      |                                                                               [01;35m[K~~~~~~~~~~~~~^~~~~[m[K
[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:141:112:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kend[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter-Wunused-parameter]8;;[m[K]
  141 | Eigen::MatrixXd TrajectoryNode::ComputeJacobian(const std::vector<double> &p, const State &start, [01;35m[Kconst State &end[m[K) {
      |                                                                                                   [01;35m[K~~~~~~~~~~~~~^~~[m[K
[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:[m[K In member function â€˜[01m[Kdouble TrajectoryNode::PartialKappa(double, const std::vector<double, std::allocator<double> >&, int)[m[Kâ€™:
[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:181:74:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kp[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter-Wunused-parameter]8;;[m[K]
  181 | double TrajectoryNode::PartialKappa(double s, [01;35m[Kconst std::vector<double> &p[m[K, int i) {
      |                                               [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~^[m[K
[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:[m[K In member function â€˜[01m[Kdouble TrajectoryNode::PartialTheta(double, const std::vector<double, std::allocator<double> >&, int)[m[Kâ€™:
[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:191:30:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[KTrajectoryNode::PartialTheta(double, const std::vector<double, std::allocator<double> >&, int)::<lambda(double)>[m[Kâ€™ to â€˜[01m[Kstd::function<double(double)>&[m[Kâ€™
  191 |     return [01;31m[KSimpsonIntegration(0, s, [&](double s) {[m[K
      |            [01;31m[K~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~[m[K
  192 | [01;31m[K        return PartialKappa(s, p, i);[m[K
      |         [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
  193 | [01;31m[K    })[m[K;
      |     [01;31m[K~~[m[K                        
In file included from [01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:1[m[K:
[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/include/trajectory_planner_node.hpp:74:86:[m[K [01;36m[Knote: [m[K  initializing argument 3 of â€˜[01m[Kdouble TrajectoryNode::SimpsonIntegration(double, double, std::function<double(double)>&, int)[m[Kâ€™
   74 |         double SimpsonIntegration(double a, double b, [01;36m[Kstd::function<double(double)> &f[m[K, int n = 1000);
      |                                                       [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^[m[K
[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:[m[K In member function â€˜[01m[Kstd::vector<CubicSpiralCoefficients> TrajectoryNode::GenerateCubicSpiralCoefficients(const std::vector<State>&, const State&)[m[Kâ€™:
[01m[K/home/seok/automotive_software_final/src/app/autonomous_driving/src/trajectory_planner_node.cpp:222:31:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kstd::vector<double, std::allocator<double> >::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wsign-compare-Wsign-compare]8;;[m[K]
  222 |             for (int i = 0; [01;35m[Ki < p.size()[m[K; ++i)
      |                             [01;35m[K~~^~~~~~~~~~[m[K
gmake[2]: *** [CMakeFiles/trajectory_planner_node.dir/build.make:76: CMakeFiles/trajectory_planner_node.dir/src/trajectory_planner_node.cpp.o] Error 1
gmake[1]: *** [CMakeFiles/Makefile2:221: CMakeFiles/trajectory_planner_node.dir/all] Error 2
gmake: *** [Makefile:146: all] Error 2
